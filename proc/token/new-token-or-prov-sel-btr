{
  $cont = 1;

  our @Param = our $T1 = qw(Par_DbToken_Hash);
  our ($P1) = paramAlias @Param;

  '';
}

create or replace procedure New_Token_or_Prov_Sel_btr (
  p_Db        tinyint,
  p_ProvHash  bigint unsigned,
  $Pid        bigint
)
begin

{Boilerplate}

{valParam @Param}

-- Execute

set transaction isolation level Serializable;

start transaction read only;

{

my $f = sub {
our $Db = shift;
our $Bbr = $Db eq 'BBR' ? 1 : 0;
view q{
select Hash
from {$P1}
where P1.$Id = $Pid
  and P1.Bbr = {$Bbr}
  and not exists (
    select 1
    from {$Db}.TokenProv Tp
    where Tp.TokenHash = P1.Hash
  )
;

{RaiseOnErr 'Select', "$Db.Token"}

select Hash
from {$P1}
where $Id = $Pid
  and P1.Bbr = {$Bbr}
  and exists (
    select 1
    from {$Db}.TokenProv Tp
    where Tp.TokenHash = P1.Hash
  )
  and not exists (
    select 1
    from {$Db}.TokenProv Tp
    where Tp.TokenHash = P1.Hash
      and Tp.ProvHash = p_ProvHash
  )
;

{RaiseOnErr 'Select', "$Db.Prov"}
}};

if_p_Db ('BB', $f) . "\n\n" . if_p_Db ('BBR', $f);

}

{$Closing}

{cleanupParam @Param}

{$End_}
